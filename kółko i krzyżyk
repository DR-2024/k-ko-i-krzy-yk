import json

def print_board(board):
    """Tworzy planszę do gry"""
    for row in board:
        print(" | ".join(row))
        print("-" * 9)

def check_winner(board):
    """
    Sprawdza czy któryś z graczy wygrał
    
    """
    for row in board:
        if row.count(row[0]) == len(row) and row[0] != ' ':
            return True

    for col in range(3):
        if board[0][col] == board[1][col] == board[2][col] and board[0][col] != ' ':
            return True

    if board[0][0] == board[1][1] == board[2][2] and board[0][0] != ' ':
        return True

    if board[0][2] == board[1][1] == board[2][0] and board[0][2] != ' ':
        return True

    return False

def is_board_full(board):
    """
    Sprawdza czy plansza została uzupełniona
    """
    for row in board:
        if ' ' in row:
            return False
    return True

def save_score(scores, filename):
    """Szapisuje wyniki w formacie JSON """
    with open(filename, "w") as f:
        json.dump(scores, f)

def load_score(filename):
    """
    wgrywa wyniki
    jeśli nie ma wyników pokazuje deffaoult scores
    """
    try:
        with open(filename, "r") as f:
            return json.load(f)
    except FileNotFoundError:
        return {"X": 0, "O": 0, "Tie": 0}

def save_settings(settings, filename):
    """zapisuje grę"""
    with open(filename, "w") as f:
        json.dump(settings, f)

def load_settings(filename):
    """
    wczytuje grę z .json
    """
    try:
        with open(filename, "r") as f:
            return json.load(f)
    except FileNotFoundError:
        return {"difficulty": "normal"}

def kolkoi_krzyzyk():
    """Menu Główne."""
    scores = load_score("scores.json")
    settings = load_settings("settings.json")

    while True:
        print("Menu Główne:")
        print("1. Zagraj Kółko i krzyżyk")
        print("2. Pokaż wyniki")
        print("3. Ustawienia")
        print("4. Quit")
        choice = input("Wybierz opcje: ")

        if choice == '1':
            scores = play_game(scores)
        elif choice == '2':
            print("Scores:")
            print(f"X: {scores['X']}")
            print(f"O: {scores['O']}")
            print(f"Ties: {scores['Tie']}")
        elif choice == '3':
            print("ustawienia:")
            print(f"Difficulty: {settings['difficulty']}")
            print("1. Zmień Poziom trudności")
            print("2. Powrót do Menu Głównego")
            setting_choice = input("Wybierz: ")
            if setting_choice == '1':
                difficulty = input("Poziom trudności (easy/normal/hard): ")
                settings['difficulty'] = difficulty.lower()
                save_settings(settings, "settings.json")
            elif setting_choice == '2':
                continue
            else:
                print("Invalid choice.")
        elif choice == '4':
            save_score(scores, "scores.json")
            break
        else:
            print("Invalid choice.")

def play_game(scores):
    """Rozgrywka play Kółko i krzyżyk."""
    board = [[' ' for _ in range(3)] for _ in range(3)]
    current_player = 'X'

    while True:
        print_board(board)
        row = int(input("Enter the row (0, 1, or 2): "))
        col = int(input("Enter the column (0, 1, or 2): "))

        if board[row][col] == ' ':
            board[row][col] = current_player
            if check_winner(board):
                print_board(board)
                print(f"Player {current_player} wins!")
                scores[current_player] += 1
                break
            elif is_board_full(board):
                print_board(board)
                print("It's a tie!")
                scores['Tie'] += 1
                break
            else:
                current_player = 'O' if current_player == 'X' else 'X'
        else:
            print("Pozycja jest zajęta, wybierz inną ")

    return scores

kolkoi_krzyzyk()

